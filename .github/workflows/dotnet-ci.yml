name: .NET CI + Docker

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore ScienceService.sln

      - name: Build
        run: dotnet build ScienceService.sln --no-restore --configuration Release

      - name: Run Tests
        run: dotnet test ScienceService.sln --no-build --configuration Release --logger "trx;LogFileName=test_results.trx"

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        with:
          test-results-files: '**/test_results.trx'

      - name: Publish WebApi for Docker (optional artifact)
        run: dotnet publish Science.WebApi/Science.WebApi.csproj -c Release -o ./publish

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ghcr.io/ivan-zelyapugin/science-service:latest
